project = "skeletor"
project_dir = File.dirname(__FILE__)
build_file = :"#{File.join %w[out skeletor]}"

docker = ENV["DOCKER"] || "docker"

task default: [:build]

desc "Run shellcheck against shell files"
task :"test:shellcheck" do
  sh "shellcheck .envrc"
end

desc "Run editorconfig checks"
task :"test:editorconfig" do
  sh "ec"
end

desc "Run all unit tests"
task test: %i[test:shellcheck test:editorconfig]

desc "Init the dev environment"
task :init do
  sh "kind create cluster -n #{project} --config=kind.yaml"
  sh "kubectl create ns #{project}"
end

desc "Destroy entirely the dev environment"
task :destroy do
  sh "kind delete clusters #{project}"
end

desc "Start the dev environment"
task :dev do
  Rake::Task[:init].invoke if `#{docker} ps -qf name=#{project}-control-plane` == ""
  sh "skaffold dev --port-forward"
end

desc "Start the debug environment"
task :debug do
  Rake::Task[:init].invoke if `#{docker} ps -qf name=#{project}-control-plane` == ""
  sh "skaffold debug --port-forward"
end

directory "out"

desc "Build the binary of the project"
task build: [build_file]

file build_file => file_list("cmd") << "out" do |t|
  sh "go build -ldflags '-s -w' -o #{t.name} #{File.join %w[cmd main.go]}"
end

desc "Build the docker image"
task :"build:image" do
  dockerfile_path = File.join %w[build container Dockerfile]
  sh "#{docker} build -t #{project} -f #{dockerfile_path} ."
end

desc "Get IP of the service"
task :"service:ip" do
  sh "#{docker} inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' #{project}-control-plane"
end

desc "Clean up generated files"
task :clean do
  walk("out") do |entry|
     File.directory?(entry) ? Dir.delete(entry) : File.delete(entry)
  end
end
